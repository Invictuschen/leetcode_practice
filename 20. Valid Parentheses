class Solution {
    public boolean isValid(String s) {
        if(s == null || s.length() == 0)
            return true;
        Stack<Character> stack = new Stack<>();
        for(Character ch : s.toCharArray())
        {
            if(ch == '{')
            {
                stack.push('}');
            }
            else if(ch == '[')
            {
                stack.push(']');
            }
            else if(ch == '(')
            {
                stack.push(')');
            }
            else//此时ch为}或]或)时
            {
                // if(stack.isEmpty() || stack.pop() != ch)//必须保证最后一个未闭合的符号 最先完成闭合 所以是stack.pop() == ch. 还有一个case 是只有]时，stack这时并未装入数据，所以在判断闭合的时候如果stack是空的，那也return false
                //     return false;
                // 把代码细化:
                if(stack.isEmpty())return false;
                Character next = stack.pop();
                if(next == ch) continue;
                else return false;
                
            }
        }
        return stack.isEmpty();
    }
}
