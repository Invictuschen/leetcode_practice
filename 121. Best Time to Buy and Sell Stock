class Solution {
    public int maxProfit(int[] prices) {
        int mpro = 0, next = 0;
        for (int i = 1; i < prices.length; i++) {
            next += prices[i] - prices[i - 1];
            if (next < 0) {
                next = 0;
            }
            mpro = Math.max(mpro, next);
        }
        return mpro; 
    }
}
这个算法是比较max和prices[i] - prices[i - 1]的值，因为prices[i] - prices[i - 1]的值在与之前的值比较时，若不小于0，则加在之前的累计上
可以理解为p[3]-p[2]+p[2]-p[1], 若此时p[1]为最小值，则可每次计算当前值与最小值的差。当p[i]-p[i-1]+p[i-1]+p[i-2]小于0时，此时克制p[i]-p[i-2]<0
可知p[i]此时被定为最小值，那么累加值归0，最小值从p[i]再次开始。
