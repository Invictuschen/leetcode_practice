public class Solution {
    /**
     * @param nums: The integer array.
     * @param target: Target to find.
     * @return: The first position of target. Position starts from 0.
     */
    public int binarySearch(int[] nums, int target) {
        // write your code here
        if(nums.length == 0 || nums == null)
        {
            return -1;
        }
        int start = 0;
        int end = nums.length -1;
        while(start + 1 < end)
        {
            int mid = start + (end - start)/2;
            if(nums[mid] == target) //if there is duplicated nums, we need to switch the mid position but not just return it directly.
            {
                end = mid;
            }
            else if(nums[mid] > target)
            {
                end = mid;
            }
            else
            {
                start = mid;
            }
        }
        //after the loop, we make only 2 nums to compare with the target, because we need the first position, so start comparation comes first.
        if(nums[start] == target)
        {
            return start;
        }
        if(nums[end] == target)
        {
            return end;
        }
        return -1;
    }
}
