 public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        if (root == null) {
            return res;
        }
        Stack<TreeNode> stack = new Stack<>();
        stack.push(root);
        boolean left = false;
        while (!stack.isEmpty()) {
             List<Integer> subset = new ArrayList<>();
             Stack<TreeNode> newstack = new Stack<>();
            int size = stack.size();
            for (int i = 0; i < size; i++) {
                TreeNode node = stack.pop();
                subset.add(node.val);
                if (left) {
                    if (node.right != null) {
                        newstack.push(node.right);
                    }
                    if (node.left != null) {
                        newstack.push(node.left);
                    }
                } else {
                    if (node.left != null) {
                        newstack.push(node.left);
                    }
                     if (node.right != null) {
                        newstack.push(node.right);
                    }
                }
            }
            left = !left;
            res.add(new ArrayList<>(subset));
            stack.addAll(newstack);
        }
        return res;
    } // 双stack
    
    //试试deque
